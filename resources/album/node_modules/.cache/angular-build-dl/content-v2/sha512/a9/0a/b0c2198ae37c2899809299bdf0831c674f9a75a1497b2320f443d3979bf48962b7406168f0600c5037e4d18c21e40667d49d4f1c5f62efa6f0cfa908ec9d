{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {Post} from \"./post\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {PostDialogComponent} from \"./post-dialog/post-dialog.component\";\nimport {PostService} from \"./post.service\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.sass']\n})\n\nexport class AppComponent {\n    title = 'album';\n    posts: Post[] = [];\n\n    constructor (\n        public dialog: MatDialog,\n        public postService: PostService\n    ) {};\n\n    ngOnInit () {\n        this.posts = this.postService.posts;\n    }\n\n    openDialog() {\n        const dialogRef = this.dialog.open(PostDialogComponent, {\n            width: '600px'\n        });\n\n        dialogRef.afterClosed().subscribe(\n            result => {\n                if (result) {\n                    this.postService.salvar(result.post, result.arquivo);\n                }\n            }\n        );\n    }\n}\n","<mat-toolbar color=\"primary\">\r\n    <span>√Ålbum</span>\r\n</mat-toolbar>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\" >\r\n    <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\r\n</div>\r\n\r\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\r\n    <mat-icon>add</mat-icon>\r\n</button>","import { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport {PostService} from \"./post.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule\n  ],\n  providers: [PostService],\n  bootstrap: [AppComponent],\n  entryComponents: [PostDialogComponent]\n})\n\nexport class AppModule { }","import {Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {Post} from \"../post\";\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.sass']\n})\nexport class PostDialogComponent implements OnInit {\n\n  dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\", \"\"),\n    file: null\n  };\n\n  nomearquivo: string;\n\n  constructor(\n      public dialogRef: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouarquivo(event) {\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.file = event.target.files[0];\n  }\n\n  salvar() {\n    this.dialogRef.close(this.dados);\n  }\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n}\n","<div fxLayout=\"column\" fxlayoutalign=\"space-around left\">\n    <div fxlayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.name\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu email</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <div fxlayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da mensagem\" [(ngModel)]=\"dados.post.title\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)]=\"dados.post.subtitle\">\n        </mat-form-field>\n    </div>\n\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.message\"></textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none\" (change)=\"mudouarquivo($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma foto\n</button>\n\n<p *ngIf=\"nomearquivo != ''\">\n    <strong>Arquivo: </strong>{{ nomearquivo }}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center\">\n    <button mat-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport {Post} from \"./post\";\nimport {HttpClient, HttpEvent, HttpEventType} from \"@angular/common/http\";\n\n@Injectable()\n\nexport class PostService {\n\n    public posts: Post[] = [];\n\n    constructor(\n        private http: HttpClient\n    ) {\n        this.http.get(\"/api\").subscribe(\n            (posts: any[]) => {\n                for(let p of posts) {\n                    this.posts.push(\n                        new Post(\n                            p.name,\n                            p.email,\n                            p.title,\n                            p.subtitle,\n                            p.message,\n                            p.file,\n                            p.id,\n                            p.likes\n                        )\n                    )\n                }\n            }\n        )\n    }\n\n    salvar(post: Post, file: File) {\n\n\n        const uploadData = new FormData();\n        uploadData.append('name', post.name);\n        uploadData.append('email', post.email);\n        uploadData.append('title', post.title);\n        uploadData.append('subtitle', post.subtitle);\n        uploadData.append('message', post.message);\n        uploadData.append('file', file.name);\n\n        console.log(post);\n        console.log(file);\n\n        this.http.post(\"/api\", uploadData)\n            .subscribe(\n                (event: HttpEvent<any>) => {\n                    if (event.type == HttpEventType.Response) {\n                        console.log(event);\n                    }\n                }\n\n            )\n    }\n}","export class Post {\r\n    constructor(\r\n        public name: string,\r\n        public email: string,\r\n        public title: string,\r\n        public subtitle: string,\r\n        public message: string,\r\n        public file?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {}\r\n}","import {Component, Input, OnInit} from '@angular/core';\nimport {Post} from \"../post\";\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.sass']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n        <div mat-card-avatar></div>\n        <mat-card-title>{{ post.title }}</mat-card-title>\n        <mat-card-subtitle>{{ post.subtitle }}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n        <p>{{ post.message }}</p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-button>LIKE</button>\n        <button mat-button>SHARE</button>\n    </mat-card-actions>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}