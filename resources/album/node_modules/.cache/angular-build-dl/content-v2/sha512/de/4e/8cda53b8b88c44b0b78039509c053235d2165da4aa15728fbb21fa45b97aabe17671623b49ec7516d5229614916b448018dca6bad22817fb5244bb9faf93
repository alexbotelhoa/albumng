{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/post-dialog/post-dialog.component.ts","webpack:///src/app/post-dialog/post-dialog.component.html","webpack:///src/app/post.service.ts","webpack:///src/app/post.ts","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","dialog","postService","title","posts","dialogRef","open","width","afterClosed","subscribe","result","salvar","post","arquivo","openDialog","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","entryComponents","PostDialogComponent","dados","event","target","files","nomearquivo","name","close","mudouarquivo","cancelar","PostService","http","get","p","push","email","subtitle","message","file","likes","uploadData","FormData","append","reportProgress","observe","type","Response","body","UploadProgress","console","log","Post","PostComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {Post} from \"./post\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {PostDialogComponent} from \"./post-dialog/post-dialog.component\";\nimport {PostService} from \"./post.service\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.sass']\n})\n\nexport class AppComponent {\n    title = 'album';\n    posts: Post[] = [];\n\n    constructor (\n        public dialog: MatDialog,\n        public postService: PostService\n    ) {};\n\n    ngOnInit () {\n        this.posts = this.postService.posts;\n    }\n\n    openDialog() {\n        const dialogRef = this.dialog.open(PostDialogComponent, {\n            width: '600px'\n        });\n\n        dialogRef.afterClosed().subscribe(\n            (result) => {\n                if (result) {\n                    this.postService.salvar(result.post, result.arquivo);\n                }\n            }\n        );\n    }\n}\n","<mat-toolbar color=\"primary\">\r\n    <span>Álbum</span>\r\n</mat-toolbar>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\" >\r\n    <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\r\n</div>\r\n\r\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\r\n    <mat-icon>add</mat-icon>\r\n</button>","import { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport {PostService} from \"./post.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule\n  ],\n  providers: [PostService],\n  bootstrap: [AppComponent],\n  entryComponents: [PostDialogComponent]\n})\n\nexport class AppModule { }","import {Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {Post} from \"../post\";\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.sass']\n})\nexport class PostDialogComponent implements OnInit {\n\n  dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  };\n\n  nomearquivo: string;\n\n  constructor(\n      public dialogRef: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouarquivo(event) {\n    this.dados.arquivo = event.target.files[0];\n    this.nomearquivo = event.target.files[0].name;\n  }\n\n  salvar() {\n    this.dialogRef.close(this.dados);\n  }\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n}\n","<div fxLayout=\"column\" fxlayoutalign=\"space-around left\">\n    <div fxlayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.name\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu email</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <div fxlayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da mensagem\" [(ngModel)]=\"dados.post.title\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)]=\"dados.post.subtitle\">\n        </mat-form-field>\n    </div>\n\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.message\"></textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none\" (change)=\"mudouarquivo($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma foto\n</button>\n\n<p *ngIf=\"nomearquivo != ''\">\n    <strong>Arquivo: </strong>{{ nomearquivo }}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center\">\n    <button mat-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport {Post} from \"./post\";\nimport {HttpClient, HttpEventType} from \"@angular/common/http\";\n\n@Injectable()\n\nexport class PostService {\n\n    public posts: Post[] = [];\n\n    constructor(private http: HttpClient) {\n        this.http.get(\"/api\").subscribe(\n            (posts: any[]) => {\n                for(let p of posts) {\n                    this.posts.push(\n                        new Post(\n                            p.name,\n                            p.email,\n                            p.title,\n                            p.subtitle,\n                            p.message,\n                            p.file,\n                            p.id,\n                            p.likes\n                        )\n                    )\n                }\n            }\n        )\n    }\n\n    salvar(post: Post, file: File) {\n\n        //console.log(post);\n        //console.log(file);\n\n        const uploadData = new FormData();\n        uploadData.append('name', post.name);\n        uploadData.append('email', post.email);\n        uploadData.append('title', post.title);\n        uploadData.append('subtitle', post.subtitle);\n        uploadData.append('message', post.message);\n        uploadData.append('file', file);\n\n        this.http.post(\"/api\", uploadData, { reportProgress: true, observe: 'events' }).subscribe((event: any) => {\n            if (event.type == HttpEventType.Response) {\n                //console.log(event);\n                let p: any = event.body;\n                this.posts.push(\n                    new Post(\n                        p.name,\n                        p.email,\n                        p.title,\n                        p.subtitle,\n                        p.message,\n                        p.file,\n                        p.id,\n                        p.likes\n                    )\n                )\n            }\n            if (event.type == HttpEventType.UploadProgress) {\n                console.log('UploadProgress');\n                console.log(event);\n            }\n        })\n    }\n}","export class Post {\r\n    constructor(\r\n        public name: string,\r\n        public email: string,\r\n        public title: string,\r\n        public subtitle: string,\r\n        public message: string,\r\n        public file?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {}\r\n}","import {Component, Input, OnInit} from '@angular/core';\nimport {Post} from \"../post\";\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.sass']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n        <div mat-card-avatar></div>\n        <mat-card-title>{{ post.title }}</mat-card-title>\n        <mat-card-subtitle>{{ post.subtitle }}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{ post.file }}\">\n    <mat-card-content>\n        <p>{{ post.message }}</p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-button>LIKE</button>\n        <button mat-button>SHARE</button>\n    </mat-card-actions>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}